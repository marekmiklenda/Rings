# Simple sorting program
#
# Takes a list of integers (max 15) on stdin terminated by EOF (0xFF) and outputs them to stdout, terminated by EOF.
# This program is very memory inefficient, because I go for small size and so I won't be doing memory optimization.
#  This task could be solved using only two rings.
# Also no error handling or exit codes.

# Ring 0 – Input
# Ring 1 – Constant 1
# Ring 2 – Constant 0xF
# Ring 3 – Constant 0xFF
# Ring 4 – Data length counter
# Ring 5 – Counter 2
# Ring 6 – Counter 3
# Ring 7 – Output cell
mkr 15
mkr 1
mkr 1
mkr 1
mkr 1
mkr 1
mkr 1
mkr 1

put 1 1
put 2 0xF
put 3 0xFF

# Loading input data until EOF
:load_inputs
    rot 0 1
    inp 0
    jeq 0 3 :loading_end
    add 4 1 4
    jmp :load_inputs
:loading_end

# If no data, skip to end.
jeq 4 5 :end

# Remaining free space to fill
sub 2 4 5

# Filling the rest of the array with garbage 0xFF
:garbage_fill
    put 0 0xFF
    rot 0 1
    sub 5 1 5
    jgt 5 6 :garbage_fill

# Iterate, always find the smallest value and output it
:main_loop
    put 7 0xFF
    :nested_loop
        rot 0 1
        jgt 0 7 :no_swap
            swp 0 7
        :no_swap
        add 5 1 5
        jlt 5 2 :nested_loop
    out 7
    put 5 0
    add 6 1 6
    jlt 6 4 :main_loop

# Done. Emit EOF and end
:end
out 3